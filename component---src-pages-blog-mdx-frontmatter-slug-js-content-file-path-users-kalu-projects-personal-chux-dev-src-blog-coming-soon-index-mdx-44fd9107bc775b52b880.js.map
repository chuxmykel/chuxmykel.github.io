{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-users-kalu-projects-personal-chux-dev-src-blog-coming-soon-index-mdx-44fd9107bc775b52b880.js","mappings":"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","sources":["webpack://chux.dev/./node_modules/@mdx-js/react/lib/index.js","webpack://chux.dev/./src/blog/coming-soon/index.mdx","webpack://chux.dev/./node_modules/prism-react-renderer/prism/index.js","webpack://chux.dev/./node_modules/prism-react-renderer/dist/index.js","webpack://chux.dev/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://chux.dev/./node_modules/prism-react-renderer/themes/dracula/index.js","webpack://chux.dev/./src/components/code-block.js","webpack://chux.dev/./src/pages/blog/{mdx.frontmatter__slug}.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Hello 👋🏿\"), \"\\n\", React.createElement(_components.p, null, \"In the coming weeks, I will be posting amazing content.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"  <!-- HTML -->\\n  <p id=\\\"code\\\">Code</p>\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"  /* CSS */\\n  #code {\\n    color: blue;\\n  }\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"  // JS\\n  const codeParagraph = document.querySelector(\\\"#code\\\");\\n  codeParagraph.innerHTML = \\\"<span>Hello World!</span>\\\";\\n\\n  function doStuff() {\\n    // Do amazing stuff\\n    return null;\\n  }\\n  // Do amazing arrow function stuff\\n  const doOtherStuff = () => null;\\n  codeParagraph !== \\\"Liquid\\\";\\n\")), \"\\n\", React.createElement(_components.p, null, \"And more...\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Stay tuned.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\n var Prism = (function () {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\treturn _;\n\n}());\n\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n\nexport default prism;\n","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n","// Original: https://github.com/dracula/visual-studio-code\n// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\"\n  },\n  styles: [{\n    types: [\"prolog\", \"constant\", \"builtin\"],\n    style: {\n      color: \"rgb(189, 147, 249)\"\n    }\n  }, {\n    types: [\"inserted\", \"function\"],\n    style: {\n      color: \"rgb(80, 250, 123)\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgb(255, 85, 85)\"\n    }\n  }, {\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(255, 184, 108)\"\n    }\n  }, {\n    types: [\"punctuation\", \"symbol\"],\n    style: {\n      color: \"rgb(248, 248, 242)\"\n    }\n  }, {\n    types: [\"string\", \"char\", \"tag\", \"selector\"],\n    style: {\n      color: \"rgb(255, 121, 198)\"\n    }\n  }, {\n    types: [\"keyword\", \"variable\"],\n    style: {\n      color: \"rgb(189, 147, 249)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(98, 114, 164)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(241, 250, 140)\"\n    }\n  }]\n};\n\nexport default theme;\n","import React from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport vsDark from \"prism-react-renderer/themes/dracula\";\n\n// import vsDark from \"prism-react-renderer/themes/palenight\";\n\nexport const CodeBlock = ({ children, className }) => {\n  // Pull the className\n  const language = className.replace(/language-/, \"\") || \"\";\n\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children}\n      language={language}\n      theme={vsDark}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={{ ...style }}>\n          {tokens.map((line, index) => {\n            const lineProps = getLineProps({ line, key: index });\n            return (\n              <div key={index} {...lineProps}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            );\n          })}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n","import GATSBY_COMPILED_MDX from \"/Users/kalu/projects/personal/chux.dev/src/blog/coming-soon/index.mdx\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport Layout from \"../../components/layout\";\nimport {Seo} from \"../../components/seo\";\nimport {CodeBlock} from \"../../components/code-block\";\nconst BlogPost = ({data, children}) => {\n  const components = {\n    pre: props => React.createElement(\"div\", Object.assign({}, props, {\n      className: \"text-base md:text-lg\"\n    })),\n    code: CodeBlock\n  };\n  const image = getImage(data.mdx.frontmatter.hero_image);\n  return React.createElement(Layout, null, React.createElement(\"div\", {\n    className: \"flex justify-center font-titillium-web w-full min-h-screen\"\n  }, React.createElement(\"div\", {\n    className: \"min-h-full w-full md:flex justify-center mt-10\"\n  }, React.createElement(\"article\", {\n    className: `prose dark:prose-invert prose-lg xl:prose-xl prose-slate prose-img:rounded-sm prose-h1:underline prose-headings:underline-offset-8 prose-a:text-blue-600 hover:prose-a:text-blue-400 prose-a:dark:text-blue-400 dark:hover:prose-a:text-blue-300 prose-a:underline prose-a:underline-offset-8 prose-pre:font-source-code-pro`\n  }, React.createElement(\"div\", {\n    className: \"mb-10\"\n  }, React.createElement(\"h1\", {\n    className: \"text-4xl md:text-5xl font-extrabold\"\n  }, data.mdx.frontmatter.title), React.createElement(\"p\", {\n    className: \"mb-10\"\n  }, \"Published \", data.mdx.frontmatter.date, \" by\", \" \", data.mdx.frontmatter.author), React.createElement(\"div\", {\n    className: \"py-4\"\n  }, React.createElement(GatsbyImage, {\n    image: image,\n    alt: data.mdx.frontmatter.hero_image_alt\n  })), React.createElement(\"p\", null, \"Photo Credit:\", \" \", React.createElement(\"a\", {\n    href: data.mdx.frontmatter.hero_image_credit_link,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, data.mdx.frontmatter.hero_image_credit_text))), React.createElement(MDXProvider, {\n    components: components\n  }, children)))));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        title\n        author\n        description\n        date(formatString: \"MMM DD, YYYY\")\n        hero_image_alt\n        hero_image_credit_link\n        hero_image_credit_text\n        hero_image {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title,\n  description: data.mdx.frontmatter.description\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value","_createMdxContent","props","_components","Object","assign","h2","p","pre","code","blockquote","_provideComponents","React","className","wrapper","MDXLayout","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","prototype","toString","call","slice","objId","obj","defineProperty","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlight","env","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","name","callbacks","length","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","from","to","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","apply","join","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","test","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","keys","substring","middle","replacement","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","enumerable","configurable","writable","_extends","target","arguments","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","len","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","CodeBlock","vsDark","lineProps","BlogPost","_ref","data","image","getImage","mdx","frontmatter","hero_image","Layout","title","date","author","GatsbyImage","alt","hero_image_alt","href","hero_image_credit_link","rel","hero_image_credit_text","Head","_ref2","Seo","description","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}